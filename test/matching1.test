// Matching test, with a simple recursion

N = 10

V1 = 1
V2 = N-1+V1
V3 = N+V2

E1 = 1
E2 = N-1+E1
E3 = N-1+E2

off1b = r(V1, 1)-r(E1, 1) 
off2b = r(V2, 1)-r(E2, 1)
off3b = r(V2, 1)-r(E3, 1)

off1d = r(V3, 1)-r(E1, 1)-N+1
off2d = r(V3, 1)-r(E2, 1)-1
off3d = r(V3, 1)-r(E3, 1)

V %= {[1:1:V1], [V1+1:1:V2], [V2+1:1:V3]};
Vmap %= <<{[1:1:V1]} -> 0*x+1, {[V1+1:1:V2]} -> 0*x+2, {[V2+1:1:V3]} -> 0*x+3>>; 
map1 %= <<{[1:1:E1]} -> 1*x+off1b, {[E1+1:1:E2]} -> 1*x+off2b, {[E2+1:1:E3]} -> 1*x+off3b>>;
map2 %= <<{[1:1:E1]} -> 1*x+off1d, {[E1+1:1:E2]} -> 1*x+off2d, {[E2+1:1:E3]} -> 1*x+off3d>>;
Emap %= <<{[1:1:E1]} -> 0*x+1, {[E1+1:1:E2], [E2+1:1:E3]} -> 0*x+2>>;

matching(
  V %= {[1:1:V1], [V1+1:1:V2], [V2+1:1:V3]};
  Vmap %= <<{[1:1:V1]} -> 0*x+1, {[V1+1:1:V2]} -> 0*x+2, {[V2+1:1:V3]} -> 0*x+3>>; 
  map1 %= <<{[1:1:E1]} -> 1*x+off1b, {[E1+1:1:E2]} -> 1*x+off2b, {[E2+1:1:E3]} -> 1*x+off3b>>;
  map2 %= <<{[1:1:E1]} -> 1*x+off1d, {[E1+1:1:E2]} -> 1*x+off2d, {[E2+1:1:E3]} -> 1*x+off3d>>;
  Emap %= <<{[1:1:E1]} -> 0*x+1, {[E1+1:1:E2], [E2+1:1:E3]} -> 0*x+2>>;
  , 1
)
