// SCC test, where the matching is a simple recursion with two
// border conditions in the middle of the long path

N = 9
N2 = 3
N3 = 6

V1 = 1
V2 = 1+V1
V3 = N-1+V2
V4 = N+V3

E1 = 1
E2 = 1+E1
E3 = N-1+E2
E4 = N-1+E3

off1b = r(V1, 1)-r(E1, 1)
off2b = r(V2, 1)-r(E2, 1)
off3b = r(V3, 1)-r(E3, 1)
off4b = r(V3, 1)-r(E4, 1)

off1d = r(V4, 1)-r(E1, 1)-N3
off2d = r(V4, 1)-r(E2, 1)-N2
off3d = r(V4, 1)-r(E3, 1)-1
off4d = r(V4, 1)-r(E4, 1)

V %= {[1:1:V1], [V1+1:1:V2], [V2+1:1:V3], [V3+1:1:V4]};
Vmap %= <<{[1:1:V1]} -> 0*x+1, {[V1+1:1:V2]} -> 0*x+2, {[V2+1:1:V3]} -> 0*x+3
          , {[V3+1:1:V4]} -> 0*x+4>>; 
map1 %= <<{[1:1:E1]} -> 1*x+off1b, {[E1+1:1:E2]} -> 1*x+off2b, {[E2+1:1:E3]} -> 1*x+off3b
          , {[E3+1:1:E4]} -> 1*x+off4b>>;
map2 %= <<{[1:1:E1]} -> 1*x+off1d, {[E1+1:1:E2]} -> 1*x+off2d, {[E2+1:1:E3]} -> 1*x+off3d
          , {[E3+1:1:E4]} -> 1*x+off4d>>;
Emap %= <<{[1:1:E1]} -> 0*x+1, {[E1+1:1:E2]} -> 0*x+2
          , {[E2+1:1:E3], [E3+1:1:E4]} -> 0*x+3>>;

matchSCC(
  V %= {[1:1:V1], [V1+1:1:V2], [V2+1:1:V3], [V3+1:1:V4]};
  Vmap %= <<{[1:1:V1]} -> 0*x+1, {[V1+1:1:V2]} -> 0*x+2, {[V2+1:1:V3]} -> 0*x+3
            , {[V3+1:1:V4]} -> 0*x+4>>; 
  map1 %= <<{[1:1:E1]} -> 1*x+off1b, {[E1+1:1:E2]} -> 1*x+off2b, {[E2+1:1:E3]} -> 1*x+off3b
            , {[E3+1:1:E4]} -> 1*x+off4b>>;
  map2 %= <<{[1:1:E1]} -> 1*x+off1d, {[E1+1:1:E2]} -> 1*x+off2d, {[E2+1:1:E3]} -> 1*x+off3d
            , {[E3+1:1:E4]} -> 1*x+off4d>>;
  Emap %= <<{[1:1:E1]} -> 0*x+1, {[E1+1:1:E2]} -> 0*x+2
            , {[E2+1:1:E3], [E3+1:1:E4]} -> 0*x+3>>;
  , 1
)
